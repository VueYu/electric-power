{"remainingRequest":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueProject\\electric-power\\src\\components\\powerLine\\line.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\VueProject\\electric-power\\src\\components\\powerLine\\line.vue","mtime":1600503946921},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\babel-loader\\lib\\index.js","mtime":1599874250055},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599874220956},{"path":"E:\\VUE\\VueProject\\electric-power\\node_modules\\vue-loader\\lib\\index.js","mtime":1599874242496}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nexport default {\n  props: {},\n  data: function data() {\n    return {\n      chartLine: '',\n      min: 0,\n      dateName: '',\n      display: false\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: {\n    //初始化数据\n    getData: function getData() {\n      var time = new Date();\n      this.chartLine = this.$echarts.init(document.getElementById('chartLineBox')); //this.chartLine = this.$echarts.init(document.getElementById('chartLineBox'), 'dark');\n\n      this.dateName = '' + this.formatDate(time); // 指定图表的配置项和数据\n\n      var option = {\n        title: {\n          text: '折线图堆叠'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['前端采集器数据', '后端采集器数据']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '前端采集器数据',\n          type: 'line',\n          stack: '电量',\n          data: [120, 132, 101, 134, 90, 230, 210]\n        }, {\n          name: '后端采集器数据',\n          type: 'line',\n          stack: '电量',\n          data: [220, 182, 191, 234, 290, 330, 310]\n        }]\n      }; // 使用刚指定的配置项和数据显示图表。\n\n      this.chartLine.setOption(option);\n    },\n    //添加数据\n    addData: function addData(value) {\n      console.log(this.stepNum.length);\n\n      if (this.stepNum.length < 8) {\n        var time = new Date();\n        this.stepNum.push(value);\n        this.timeData.push(this.formatTime(time)); //向数组的末尾添加\n\n        console.log('已添加');\n        this.getData();\n      }\n\n      if (this.stepNum.length >= 8) {\n        var time = new Date();\n        console.log(value);\n        this.stepNum.splice(0, 1);\n        this.timeData.splice(0, 1);\n        this.stepNum.push(value);\n        console.log(this.formatTime(time));\n        this.timeData.push(this.formatTime(time)); //向数组的末尾添加\n\n        console.log('已添加');\n        this.getData();\n      }\n\n      this.min = this.stepNum[0];\n    },\n    // 日期数字补0操作\n    addZero: function addZero(num) {\n      return num < 10 ? '0' + num : num;\n    },\n    //2020-05-06T11:40:17.000+0000，转换\n    formatDate: function formatDate(date) {\n      var time = new Date(Date.parse(date));\n      var Y = time.getFullYear() + '-';\n      var M = this.addZero(time.getMonth() + 1) + '-';\n      var D = this.addZero(time.getDate());\n      return Y + M + D;\n    },\n    //转换日期格式 正常,这里只需要时间\n    formatTime: function formatTime(date) {\n      var time = new Date(Date.parse(date));\n      var h = this.addZero(time.getHours()) + ':';\n      var m = this.addZero(time.getMinutes()) + ':';\n      var s = this.addZero(time.getSeconds());\n      return h + m + s; // }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    //组件销毁执行\n    //清除定时器\n    clearInterval(this.timer);\n    console.log(\"beforeDestroy\");\n  },\n  destroyed: function destroyed() {\n    // 销毁监听事件\n    //清除定时器\n    //clearInterval(this.timer);\n    console.log(\"destroyed\");\n  }\n};",{"version":3,"sources":["line.vue"],"names":[],"mappings":"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","sourcesContent":["<!--电量折线图-->\r\n<template>\r\n\t<div style=\"margin: 0px;padding:0px\">\r\n\t\t<div id=\"chartLineBox\" style=\"width: 90%;height: 50vh;text-align: center;\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport echarts from 'echarts'\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\t\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tchartLine: '',\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tdateName: '',\r\n\t\t\t\tdisplay: false,\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.getData();\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\t//初始化数据\r\n\t\t\tgetData() {\r\n\t\t\t\tvar time = new Date();\r\n\t\t\t\tthis.chartLine = this.$echarts.init(document.getElementById('chartLineBox'));\r\n\t\t\t\t//this.chartLine = this.$echarts.init(document.getElementById('chartLineBox'), 'dark');\r\n\t\t\t\tthis.dateName = '' + this.formatDate(time);\r\n\t\t\t\t// 指定图表的配置项和数据\r\n\t\t\t\tvar option = {\r\n\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\ttext: '折线图堆叠'\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\ttrigger: 'axis'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdata: ['前端采集器数据', '后端采集器数据']\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\tleft: '3%',\r\n\t\t\t\t\t\tright: '4%',\r\n\t\t\t\t\t\tbottom: '3%',\r\n\t\t\t\t\t\tcontainLabel: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttoolbox: {\r\n\t\t\t\t\t\tfeature: {\r\n\t\t\t\t\t\t\tsaveAsImage: {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\txAxis: {\r\n\t\t\t\t\t\ttype: 'category',\r\n\t\t\t\t\t\tboundaryGap: false,\r\n\t\t\t\t\t\tdata: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n\t\t\t\t\t},\r\n\t\t\t\t\tyAxis: {\r\n\t\t\t\t\t\ttype: 'value'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\tname: '前端采集器数据',\r\n\t\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\t\tstack: '电量',\r\n\t\t\t\t\t\t\tdata: [120, 132, 101, 134, 90, 230, 210]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: '后端采集器数据',\r\n\t\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\t\tstack: '电量',\r\n\t\t\t\t\t\t\tdata: [220, 182, 191, 234, 290, 330, 310]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t};\r\n\t\t\t\t// 使用刚指定的配置项和数据显示图表。\r\n\t\t\t\tthis.chartLine.setOption(option);\r\n\t\t\t},\r\n\r\n\t\t\t//添加数据\r\n\t\t\taddData(value) {\r\n\t\t\t\tconsole.log(this.stepNum.length);\r\n\t\t\t\tif (this.stepNum.length < 8) {\r\n\t\t\t\t\tvar time = new Date();\r\n\t\t\t\t\tthis.stepNum.push(value);\r\n\t\t\t\t\tthis.timeData.push(this.formatTime(time)); //向数组的末尾添加\r\n\t\t\t\t\tconsole.log('已添加');\r\n\t\t\t\t\tthis.getData();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.stepNum.length >= 8) {\r\n\t\t\t\t\tvar time = new Date();\r\n\t\t\t\t\tconsole.log(value);\r\n\t\t\t\t\tthis.stepNum.splice(0, 1);\r\n\t\t\t\t\tthis.timeData.splice(0, 1);\r\n\t\t\t\t\tthis.stepNum.push(value);\r\n\t\t\t\t\tconsole.log(this.formatTime(time));\r\n\t\t\t\t\tthis.timeData.push(this.formatTime(time)); //向数组的末尾添加\r\n\t\t\t\t\tconsole.log('已添加');\r\n\t\t\t\t\tthis.getData();\r\n\t\t\t\t}\r\n\t\t\t\tthis.min = this.stepNum[0];\r\n\r\n\t\t\t},\r\n\r\n\t\t\t// 日期数字补0操作\r\n\t\t\taddZero(num) {\r\n\t\t\t\treturn num < 10 ? '0' + num : num;\r\n\t\t\t},\r\n\r\n\t\t\t//2020-05-06T11:40:17.000+0000，转换\r\n\t\t\tformatDate(date) {\r\n\t\t\t\tvar time = new Date(Date.parse(date));\r\n\t\t\t\tvar Y = time.getFullYear() + '-';\r\n\t\t\t\tvar M = this.addZero(time.getMonth() + 1) + '-';\r\n\t\t\t\tvar D = this.addZero(time.getDate());\r\n\t\t\t\treturn Y + M + D;\r\n\t\t\t},\r\n\t\t\t//转换日期格式 正常,这里只需要时间\r\n\t\t\tformatTime(date) {\r\n\t\t\t\tvar time = new Date(Date.parse(date));\r\n\t\t\t\tvar h = this.addZero(time.getHours()) + ':';\r\n\t\t\t\tvar m = this.addZero(time.getMinutes()) + ':';\r\n\t\t\t\tvar s = this.addZero(time.getSeconds());\r\n\t\t\t\treturn h + m + s;\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t},\r\n\t\tbeforeDestroy() {\r\n\t\t\t//组件销毁执行\r\n\t\t\t//清除定时器\r\n\t\t\tclearInterval(this.timer);\r\n\t\t\tconsole.log(\"beforeDestroy\");\r\n\t\t},\r\n\t\tdestroyed() {\r\n\t\t\t// 销毁监听事件\r\n\t\t\t//清除定时器\r\n\t\t\t//clearInterval(this.timer);\r\n\t\t\tconsole.log(\"destroyed\");\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n</style>\n"],"sourceRoot":"src/components/powerLine"}]}